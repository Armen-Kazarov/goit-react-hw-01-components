{"version":3,"sources":["components/Profile/Profile.module.css","components/Transactions/TransactionHistory.module.css","components/FriendsList/FriendsList.module.css","components/Statistics/Statistics.module.css","components/Profile/Profile.js","components/Statistics/StatisticsItem.js","components/Statistics/Statistics.js","components/FriendsList/FriendListItem.js","components/FriendsList/FriendsList.js","components/Transactions/TransactionHistoryItem.js","components/Transactions/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","s","profile","description","imgWrapper","src","alt","statsItem","label","quantity","followers","views","likes","createBg","r","Math","floor","random","g","b","toString","StatisticsItem","percentage","item","style","backgroundColor","Statistics","title","statistics","statList","length","map","elem","id","classStyleOnline","colorIsOnline","status","classStyleOffline","colorIsOffline","FriendListItem","isOnline","width","FriendList","friends","friendList","friend","TransactionHistoryItem","type","amount","currency","transactionHistoryItemRow","transactionHistoryItem","TransactionHistory","items","transactionHistory","transactionHistoryHeader","transactionHistoryTitle","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a58ff239.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1UAj5\",\"description\":\"Profile_description__7HNjd\",\"name\":\"Profile_name__2hXX5\",\"tag\":\"Profile_tag__4nGXF\",\"location\":\"Profile_location__3VOj8\",\"label\":\"Profile_label__2aHZm\",\"imgWrapper\":\"Profile_imgWrapper__3hJC7\",\"avatar\":\"Profile_avatar__2kSWV\",\"stats\":\"Profile_stats__3BGnQ\",\"statsItem\":\"Profile_statsItem__2lRSs\",\"quantity\":\"Profile_quantity__2x315\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__13Wn5\",\"transactionHistoryHeader\":\"TransactionHistory_transactionHistoryHeader__yTdRc\",\"transactionHistoryTitle\":\"TransactionHistory_transactionHistoryTitle__10Zaa\",\"transactionHistoryItem\":\"TransactionHistory_transactionHistoryItem__1PCL2\",\"transactionHistoryItemRow\":\"TransactionHistory_transactionHistoryItemRow__3vjMD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendsList_friendList__1Nwhr\",\"item\":\"FriendsList_item__2fdac\",\"status\":\"FriendsList_status__3jKO_\",\"colorIsOnline\":\"FriendsList_colorIsOnline__3SP_s\",\"colorIsOffline\":\"FriendsList_colorIsOffline__10lp8\",\"name\":\"FriendsList_name__2JXOg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__3RIeG\",\"statList\":\"Statistics_statList__2yzm_\",\"item\":\"Statistics_item__20tMb\"};","import PropTypes from 'prop-types';\nimport s from 'components/Profile/Profile.module.css';\n\nconst Profile = ({ name, tag, location, avatar, stats }) => {\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <div className={s.imgWrapper}>\n          <img src={avatar} alt=\"user avatar\" className={s.avatar} />\n        </div>\n        <p className={s.name}>{name}</p>\n        <p className={s.tag}>@{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li className={s.statsItem}>\n          <span className={s.label}>Followers</span>\n          <span className={s.quantity}>{stats.followers}</span>\n        </li>\n        <li className={s.statsItem}>\n          <span className={s.label}>Views</span>\n          <span className={s.quantity}>{stats.views}</span>\n        </li>\n        <li className={s.statsItem}>\n          <span className={s.label}>likes</span>\n          <span className={s.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n};\n\nexport default Profile;\n","import s from './Statistics.module.css';\n\nconst createBg = () => {\n  const r = Math.floor(Math.random() * 256);\n  const g = Math.floor(Math.random() * 256);\n  const b = Math.floor(Math.random() * 256);\n  return '#' + r.toString(16) + g.toString(16) + b.toString(16);\n};\n\nconst StatisticsItem = ({ label, percentage }) => {\n  return (\n    <li className={s.item} style={{ backgroundColor: createBg() }}>\n      <span className={s.label}>{label}</span>\n      <span className={s.percentage}>{percentage}%</span>\n    </li>\n  );\n};\n\nexport default StatisticsItem;\n","import StatisticsItem from './StatisticsItem';\nimport PropTypes from 'prop-types';\nimport s from '../Statistics/Statistics.module.css';\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <section className={s.statistics}>\n      {title && <h2 className={s.title}>{title}</h2>}\n\n      <ul className={s.statList}>\n        {stats.length &&\n          stats.map(elem => (\n            <StatisticsItem\n              key={elem.id}\n              label={elem.label}\n              percentage={elem.percentage}\n            />\n          ))}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default Statistics;\n","import s from './FriendsList.module.css';\n\nconst classStyleOnline = s.colorIsOnline + ' ' + s.status;\nconst classStyleOffline = s.colorIsOffline + ' ' + s.status;\n\nconst FriendListItem = ({ avatar, name, isOnline }) => {\n  return (\n    <li className={s.item}>\n      {isOnline ? (\n        <span className={classStyleOnline}> </span>\n      ) : (\n        <span className={classStyleOffline}> </span>\n      )}\n      <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={s.name}>{name}</p>\n    </li>\n  );\n};\n\nexport default FriendListItem;\n","import FriendListItem from './FriendListItem';\nimport PropTypes from 'prop-types';\nimport s from 'components/FriendsList/FriendsList.module.css';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className={s.friendList}>\n      {friends.map(friend => (\n        <FriendListItem\n          key={friend.id}\n          isOnline={friend.isOnline}\n          name={friend.name}\n          avatar={friend.avatar}\n        />\n      ))}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      avatar: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n    }),\n  ),\n};\n\nexport default FriendList;\n","import s from './TransactionHistory.module.css';\n\nconst TransactionHistoryItem = ({ type, amount, currency }) => {\n  return (\n    <tr className={s.transactionHistoryItemRow}>\n      <td className={s.transactionHistoryItem}>{type}</td>\n      <td className={s.transactionHistoryItem}>{amount}</td>\n      <td className={s.transactionHistoryItem}>{currency}</td>\n    </tr>\n  );\n};\n\nexport default TransactionHistoryItem;\n","import TransactionHistoryItem from './TransactionHistoryItem';\nimport PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={s.transactionHistory}>\n      <thead>\n        <tr className={s.transactionHistoryHeader}>\n          <th className={s.transactionHistoryTitle}>Type</th>\n          <th className={s.transactionHistoryTitle}>Amount</th>\n          <th className={s.transactionHistoryTitle}>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.length &&\n          items.map(item => (\n            <TransactionHistoryItem\n              key={item.id}\n              type={item.type}\n              amount={item.amount}\n              currency={item.currency}\n            />\n          ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionHistory;\n","import Profile from 'components/Profile/Profile';\nimport Statistics from 'components/Statistics/Statistics';\nimport FriendList from 'components/FriendsList/FriendsList';\nimport TransactionHistory from 'components/Transactions/TransactionHistory';\nimport user from './jsonData/user';\nimport statisticalData from './jsonData/statistical-data';\nimport friends from './jsonData/friends.json';\nimport transactions from './jsonData/transactions';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />;\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}